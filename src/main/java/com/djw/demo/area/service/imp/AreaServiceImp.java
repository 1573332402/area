package com.djw.demo.area.service.imp;import com.djw.demo.area.dao.AreaDao;import com.djw.demo.area.entity.Area;import com.djw.demo.area.service.AreaService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import java.util.Date;import java.util.List;@Servicepublic class AreaServiceImp implements AreaService {    @Autowired    private AreaDao areaDao;    @Override    public List<Area> queryArea() {        return areaDao.queryArea();    }    @Override    public Area queryAreaById(int areaId) {        return areaDao.queryAreaById(areaId);    }    @Override    @Transactional    public boolean insertArea(Area area) {        if(area.getAreaName()!=null&&!"".equals(area.getAreaName())){            area.setCreateTime(new Date());            area.setLastEditTime(new Date());            try {                int count = areaDao.insertArea(area);                if(count>0){                    return true;                }else{                    throw new RuntimeException("插入信息失败");                }            }catch (Exception e){                throw new RuntimeException("插入信息失败"+e.getMessage());            }        }else{            throw new RuntimeException("插入的信息不能为空");        }    }    @Override    public boolean updateArea(Area area) {        if(area.getAreaId()!=null&&!"".equals(area.getAreaId())){            area.setLastEditTime(new Date());            try{                int count = areaDao.updateArea(area);                if(count>0){                    return true;                }else{                    throw new Exception("更新信息失败");                }            }catch (Exception e){                throw new RuntimeException("更新信息失败"+e.getMessage());            }        }else{            throw new RuntimeException("更新的信息不能为空");        }    }    @Override    public boolean deleteArea(int areaId) {        if(areaId>0){            try{                int count = areaDao.deleteArea(areaId);                if(count>0){                    return true;                }else{                    throw new RuntimeException("删除信息失败");                }            }catch (Exception e){                throw new RuntimeException("删除信息失败"+e.getMessage());            }        }else{            throw new RuntimeException("删除的id不能为空");        }    }}